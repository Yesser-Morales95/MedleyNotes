{"_id":"Bky62Xw-Q","title":"RVIZ MOVEIT","dateCreated":1529457846569,"lastAccessed":"2018-06-20T01:24:06.570Z","lastUpdated":"2018-09-12T02:01:30.167Z","notebookId":"ry--9DzSQ","body":{"blocks":[{"key":"ag6qs","text":"RVIZ MOVEIT","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"u454","text":"A Systematic Approach to Learning Robot Programming with ROS","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":60,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bii7v","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6dmnc","text":"Ros by Example","type":"blockquote","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3q71l","text":"Executing Cartesian Paths","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7n1c4","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"553h1","text":"#include <moveit/robot_model/robot_model.h>","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"jjbm","text":"#include <moveit/robot_model_loader/robot_model_loader.h>","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"53on5","text":"#include <rviz/view_manager.h>","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"578rj","text":"","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"63dks","text":"robot_model_loader::RobotModelLoader robot_model_loader(\"robot_description\");","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e2agr","text":"robot_model::RobotModelPtr kinematic_model = robot_model_loader.getModel();","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"30s4q","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"57llu","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a7dsh","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eg42b","text":"Working with Plugin   (Mastering ROS for Robotic Programming)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":20,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9aen5","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5j82h","text":"In ROS is possible work with Pluginlib, Nodelets and Gazebo Plugins.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"851pt","text":"Understanding Pluginlib ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":24,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"eil18","text":"The advantage of plugins are that we donâ€™t need to write all the features in main software, instead, we can make an infrastructure on the main software to accept new plugins to it. Using this method, we can extend the capabilities of software to any level.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a88ac","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"43agh","text":"We need plugins for our robotics application too. When we are going to build a complex ROS based application for a robot, plugins will be a good choice to extend the capabilities of the application.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"24lir","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bejp","text":"The ROS system provides a plugin framework called pluginlib to dynamically load/ unload plugins. Plugin files are runtime libraries such as shared objects (.so) or dynamic link libraries (.DLL).","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8094i","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dhsig","text":"The main advantage of plugins is that we can expand the application capabilities without making many changes in the main application code.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2kv05","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a4ck1","text":"Follow and example control PR2 Gazebo","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2nlmt","text":"1. Making package","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cgdiu","text":"\t>>catkin_create_pkg my_controller_pkg roscpp pluginlib pr2_controller_interface    \t\tpr2_mechanism_model","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bvh4g","text":"2. Add my_controller_file.h","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7ssu5","text":"The move group is the heart of Moveit. this node collects robot information such joint_state etc. From parameter Server, it collects the robot kinematics data, such.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9nso9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5o8ej","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8embu","text":"MoveIt!","type":"blockquote","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1n1me","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5m6f9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6753o","text":"1. URDF with robot_description that is a Parameter server. Robot kinematics data.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"27ke3","text":"Ex:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"82pra","text":"rvizglabre/src/ROSGUI.cpp","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":25,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"46ubk","text":"  XmlRpc::XmlRpcValue robot_description(urdf);","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6drgk","text":"  nh_.setParam(\"my_lab_uni/robot_description\", robot_description);","type":"custom-code-block-cpp","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"38lau","text":"Mastering ROS for Robotic Programming","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":37,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"892tp","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"at1en","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ehusq","text":"2. SRDF ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"66p5f","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7de47","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2d6nb","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4s5r8","text":"3. And Configuration files contain the parameter file for setting joint limits, perception, kinematics, end effector, and so on.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dsg3s","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9tvth","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bi93k","text":"With these files properly configured, we can start commanding the robot from the user interfaces. We can either use C++ or python Moveit APIs to command the move group node to perform actions such as pick/place, IK, FK, among others.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7j8ie","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4qqs5","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c2gnm","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9bb6i","text":"Running Setup assistant Manager","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":31,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"4jej7","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"jv1s","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2l01a","text":"1. Generate Colission Matrix","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"chfcr","text":"The collision matrix lists all the links that can never be in collision with each other. For example, the gripper can never collide with one of the wheels because the arm is not long enough. Having this table pre-computed can save value CPU time when it comes to planning movements of the arm.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6lueg","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dlogs","text":"2. Virtual Joint","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"78rfr","text":"Virtual joints are used primarily to attach the robot to the world. In our case, we want to connect the robot's base_footprint frame to the odom frame using a planar joint which allows the two links to slide over each other in a 2D plane.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1ni4k","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fkrg5","text":"3. Planning groups","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1h11q","text":"Planning groups are used to describe different semantic parts of your robot, such as the right arm, the right gripper, or the head","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":47,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"7601g","text":"rightarm:","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8it4s","text":"  kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1b0qv","text":"  kinematics_solver_search_resolution: 0.005","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e10sc","text":"  kinematics_solver_timeout: 0.005","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"qekr","text":"  kinematics_solver_attempts: 3","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bq6o6","text":"leftarm:","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5d7kp","text":"  kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"de70h","text":"  kinematics_solver_search_resolution: 0.005","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5hqrb","text":"  kinematics_solver_timeout: 0.005","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dq3f8","text":"  kinematics_solver_attempts: 3","type":"custom-code-block-yaml","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4mn8u","text":"4. Adding the robot poses","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"44trt","text":"In this step, we can add certain fixed poses in the robot configuration.For example, we can assign a home position or a pick/place position in","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"789c1","text":"this step. The advantage is that while programming with MoveIt! APIs,","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5kgu","text":"we can directly call these poses, which are also called group states. This has","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"33pjo","text":"many applications in the pick/place and grasping operation. The robot can","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bbru2","text":"switch to the fixed poses without any hassle.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3enlu","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3o1lu","text":"Joint Limits","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"77gef","text":"URDF models, the range of each joint can be restricted by defining upper and lower position limits. The velocity of a joint can also be limited in the URDF file using the vlimit parameter. The MoveIt! Setup Assistant creates the","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4tbaq","text":"joint_limits.yaml configuration file that sets the maximum velocity for each joint based on any vlimit values found in the original URDF file. It also includes parameters for setting maximum joint acceleration","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4fmep","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8uvpn","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"acqcu","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7ni90","text":"Examples repository","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fpl65","text":"roslaunch fermi_irb2400_moveit_config moveit_planning_execution.launch ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7mum6","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i9h5","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3j9db","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e4ffn","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"tags":[]}
